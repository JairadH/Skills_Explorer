// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace CTCJobSkills.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Components;
#nullable restore
#line 1 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using System.Net.Http;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using Microsoft.AspNetCore.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using Microsoft.AspNetCore.Components.Authorization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using Microsoft.AspNetCore.Components.Forms;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using Microsoft.AspNetCore.Components.Routing;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using Microsoft.AspNetCore.Components.Web;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using Microsoft.JSInterop;

#line default
#line hidden
#nullable disable
#nullable restore
#line 8 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using CTCJobSkills;

#line default
#line hidden
#nullable disable
#nullable restore
#line 9 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using CTCJobSkills.Shared;

#line default
#line hidden
#nullable disable
#nullable restore
#line 10 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using CTCJobSkills.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 11 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\_Imports.razor"
using System.Net.Http.Json;

#line default
#line hidden
#nullable disable
    [Microsoft.AspNetCore.Components.RouteAttribute("/")]
    public partial class Index : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.Rendering.RenderTreeBuilder __builder)
        {
        }
        #pragma warning restore 1998
#nullable restore
#line 207 "C:\Users\Jairad\source\repos\CTCJobSkills\CTCJobSkills\Pages\Index.razor"
      


    //Declaring Variables

    // For success message
    public bool show = false;

    //Pull skills from the Model
    JobSkills PulledSkills1;
    JobSkills PulledSkills2;
    JobSkills PulledSkills3;

    //Error string if something happens with printing Skills.
    string errorString;

    //references for the HTML above
    public JobsModel jobsModel = new JobsModel();

    //Making lists to store the API Data that is pulled from related skills
    List<Student> Students = new List<Student>();
    List<Student> Students2 = new List<Student>();
    List<Student> Students3 = new List<Student>();

    //Converted Job input if there are spaces.
    public string HTTPJob1;
    public string HTTPJob2;
    public string HTTPJob3;

    //User input for Jobs, Then passed into HTTPJob
    public string Job1;
    public string Job2;
    public string Job3;

    //Skill ID is stored here so it can be passed into the URL
    public string UUID1;
    public string UUID2;
    public string UUID3;

    //stores url with Job ID Added so it can be passed into the API request.
    public string HTTPSkills1;
    public string HTTPSkills2;
    public string HTTPSkills3;


    //Pulls the Job ID so it can be referenced.
    public class Student
    {
        //set uuid to something else errors.
        public string uuid { get; set; } = " ";
    }

    //A lot of the work is done here after button press.
    public async Task GetStudents()
    {

        //Show Success message once button is clicked.
        show = true;


        //No need for IF here becuase there should always be something in spot 1.
        HTTPJob1 = Job1.Replace(" ", "%20");

        //Pulls the Job ID from the API
        Students = await http.GetFromJsonAsync<List<Student>>("http://api.dataatwork.org/v1/jobs/autocomplete?begins_with=" + HTTPJob1);

        //Stores Job ID in UUID so it can be passed into URL for next API call.
        foreach (var Student in Students)
        {
            UUID1 = Student.uuid;
        }

        //formatts the URL string so it can be passed into API call.
        HTTPSkills1 = String.Format("http://api.dataatwork.org/v1/jobs/{0}/related_skills", UUID1);

        //Calls the API to get Related Skills.
        var request1 = new HttpRequestMessage(HttpMethod.Get,
        HTTPSkills1);

        //Client Factory Stuff. Helps with reaching out to API
        var client1 = _ClientFactory.CreateClient();
        HttpResponseMessage response = await client1.SendAsync(request1);

        //If API call is successful
        if (response.IsSuccessStatusCode)
        {
            //stored in Pulled skills.
            PulledSkills1 = await response.Content.ReadFromJsonAsync<JobSkills>();

            //set error back to null incase others run into errors or if they change inputs and resubmitt.
            errorString = null;
        }
        else
        {
            // Print Error String.
            errorString = $"Error getting skills. {response.ReasonPhrase}";
        }





        // JOB 2 Code
        //If Job2 is not empty
        if (Job2 != null)
        {
            //No need for IF here becuase there should always be something in spot 1.
            HTTPJob2 = Job2.Replace(" ", "%20");

            //Pulls the Job ID from the API
            Students2 = await http.GetFromJsonAsync<List<Student>>("http://api.dataatwork.org/v1/jobs/autocomplete?begins_with=" + HTTPJob2);

            //Stores Job ID in UUID so it can be passed into URL for next API call.
            foreach (var Student in Students2)
            {
                UUID2 = Student.uuid;
            }

            //formatts the URL string so it can be passed into API call.
            HTTPSkills2 = String.Format("http://api.dataatwork.org/v1/jobs/{0}/related_skills", UUID2);

            //Calls the API to get Related Skills.
            var request2 = new HttpRequestMessage(HttpMethod.Get,
            HTTPSkills2);

            //Client Factory Stuff. Helps with reaching out to API
            var client2 = _ClientFactory.CreateClient();
            HttpResponseMessage response2 = await client2.SendAsync(request2);


            //If API call is successful
            if (response2.IsSuccessStatusCode)
            {
                //stored in Pulled skills.
                PulledSkills2 = await response2.Content.ReadFromJsonAsync<JobSkills>();

                //set error back to null incase others run into errors or if they change inputs and resubmitt.
                errorString = null;
            }
            else
            {
                // Print Error String.
                errorString = $"Error getting skills. {response2.ReasonPhrase}";
            }

        }
        else
        {
            //return noting if nothing is found
        }





        // JOB 3 Code
        //If Job3 is not empty
        if (Job3 != null)
        {
            //No need for IF here becuase there should always be something in spot 1.
            HTTPJob3 = Job3.Replace(" ", "%20");

            //Pulls the Job ID from the API
            Students3 = await http.GetFromJsonAsync<List<Student>>("http://api.dataatwork.org/v1/jobs/autocomplete?begins_with=" + HTTPJob3);

            //Stores Job ID in UUID so it can be passed into URL for next API call.
            foreach (var Student in Students3)
            {
                UUID3 = Student.uuid;
            }

            //formatts the URL string so it can be passed into API call.
            HTTPSkills3 = String.Format("http://api.dataatwork.org/v1/jobs/{0}/related_skills", UUID3);


            //Calls the API to get Related Skills.
            var request3 = new HttpRequestMessage(HttpMethod.Get,
            HTTPSkills3);

            //Client Factory Stuff. Helps with reaching out to API
            var client3 = _ClientFactory.CreateClient();
            HttpResponseMessage response3 = await client3.SendAsync(request3);


            //If API call is successful
            if (response3.IsSuccessStatusCode)
            {
                //stored in Pulled skills.
                PulledSkills3 = await response3.Content.ReadFromJsonAsync<JobSkills>();

                //set error back to null incase others run into errors or if they change inputs and resubmitt.
                errorString = null;
            }
            else
            {
                // Print Error String.
                errorString = $"Error getting skills. {response3.ReasonPhrase}";
            }
        }
        else
        {
        }
    }


#line default
#line hidden
#nullable disable
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private IHttpClientFactory _ClientFactory { get; set; }
        [global::Microsoft.AspNetCore.Components.InjectAttribute] private HttpClient http { get; set; }
    }
}
#pragma warning restore 1591
